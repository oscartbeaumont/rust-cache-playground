name: GH Actions - Linux cross compile

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable

      # TODO: Enable this + different cache key
      #   - uses: Swatinem/rust-cache@v2
      #     with:
      #       cache-on-failure: "true"

      # TODO: Run tests for each OS
      #   - name: Run tests
      #     run: cargo test --all-features

      #   - name: Determine Rust target suffix
      #     shell: bash
      #     run: |
      #       RUST_TARGET_SUFFIX="$(rustc -vV | sed -n 's|host: ||p' | cut -d- -f2-10)"
      #       BINARY_PATH_SUFFIX="$([ "${{ matrix.os }}" == "windows" ] && echo ".exe" || echo "")"
      #       echo "RUST_TARGET_SUFFIX=$RUST_TARGET_SUFFIX" >> $GITHUB_ENV
      #       echo "BINARY_PATH_SUFFIX=$BINARY_PATH_SUFFIX" >> $GITHUB_ENV

      - name: Build binary - x86_64-apple-darwin
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: build
          target: x86_64-apple-darwin
          args: "--locked --release"
          strip: true
        env:
          RUSTFLAGS: "-C link-args=-fstack-protector-all -lssp"

      - name: Build binary - x86_64-unknown-linux-gnu
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: build
          target: x86_64-unknown-linux-gnu
          args: "--locked --release"
          strip: true

      - name: Build binary - aarch64-unknown-linux-gnu
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: build
          target: aarch64-unknown-linux-gnu
          args: "--locked --release"
          strip: true

      # TODO: Windows
