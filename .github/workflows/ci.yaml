name: CI - Full Linux

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  release:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # - target: x86_64-pc-windows-gnu
          # - target: x86_64-unknown-linux-musl
          # - target: aarch64-unknown-linux-musl

          - target: x86_64-apple-darwin
          #   - target: aarch64-apple-darwin

    steps:
      - uses: actions/checkout@master

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: rust-${{ matrix.target }}
          cache-on-failure: "true"

      # - name: Compile
      #   id: compile
      #   uses: oscartbeaumont/rust-build.action@master # rust-build/rust-build.action@v1.4.4
      #   with:
      #     RUSTTARGET: ${{ matrix.target }}
      #     UPLOAD_MODE: none

      - name: Setup - x86_64-unknown-linux-musl
        if: ${{ matrix.target == 'x86_64-unknown-linux-musl' }}
        run: sudo apt-get install musl-tools

      - name: Setup - x86_64-pc-windows-gnu
        if: ${{ matrix.target == 'x86_64-pc-windows-gnu' }}
        run: sudo apt-get install gcc-mingw-w64

      - name: Setup - aarch64-unknown-linux-musl
        if: ${{ matrix.target == 'aarch64-unknown-linux-musl' }}
        run: |
          git clone https://github.com/lovell/aarch64-linux-musl-crosstools.git /opt/aarch64-linux-musl-crosstools
          mv /opt/aarch64-linux-musl-crosstools/aarch64-linux-musl-cross /opt/aarch64-musl-cross
          export PATH=$PATH:/opt/aarch64-musl-cross/bin
          export CC=/opt/aarch64-musl-cross/bin/aarch64-linux-musl-cc
          export PATH="/opt/aarch64-musl-cross/bin:$PATH"
          export LIBZ_SYS_STATIC=1
          sudo mkdir -p /.cargo

          cat << EOF | sudo tee -a /.cargo/config.toml
          [target.aarch64-unknown-linux-musl]
          linker = "/opt/aarch64-musl-cross/bin/aarch64-linux-musl-gcc"
          ar = "/opt/aarch64-musl-cross/bin/aarch64-linux-musl-ar"
          EOF

      - name: Setup - x86_64-apple-darwin
        if: ${{ matrix.target == 'x86_64-apple-darwin' }}
        run: |
          sudo git clone https://github.com/tpoechtrager/osxcross /opt/osxcross
          sudo curl -Lo /opt/osxcross/tarballs/MacOSX11.3.sdk.tar.xz "https://storage.googleapis.com/ory.sh/build-assets/MacOSX11.3.sdk.tar.xz"
          sudo /bin/bash -c 'cd /opt/osxcross && UNATTENDED=yes OSX_VERSION_MIN=11.3 ./build.sh'

          export CC=/opt/osxcross/target/bin/o64-clang
          export CXX=/opt/osxcross/target/bin/o64-clang++
          export PATH="/opt/osxcross/target/bin:$PATH"
          export LIBZ_SYS_STATIC=1
          sudo mkdir -p /.cargo
          cat << EOF | sudo tee -a /.cargo/config.toml
          [target.x86_64-apple-darwin]
          linker = "/opt/osxcross/target/bin/o64-clang"
          ar = "/opt/osxcross/target/bin/x86_64-apple-darwin14-ar"
          EOF

      - name: Compile
        run: |
          rustup target add ${{ matrix.target }}
          cargo build --release --target ${{ matrix.target }}

# TODO: These have the ugliest upload format, clean it up!
#   - name: Upload artifact
#     uses: actions/upload-artifact@v3
#     with:
#       name: Binary
#       path: |
#         ${{ steps.compile.outputs.BUILT_ARCHIVE }}
#         ${{ steps.compile.outputs.BUILT_CHECKSUM }}
